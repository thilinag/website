---
import { Icon } from "astro-icon";
import { ClientRouter } from "astro:transitions";
// Supports weights 300-700
import "@fontsource-variable/space-grotesk";

import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";

import "../styles/main.css";
import { isHomepage } from "../utils";

export interface Props {
    title: string;
    backLabel?: string;
    backURL?: string;
    description?: string;
}

const name = "Thilina Gunasekara";
const {
    title,
    backURL = "/",
    backLabel = "Home",
    description = "Personal website of Thilina Gunasekara, Adelaide based Software Engineer",
} = Astro.props;
const pageTitle = title ? `${title} | ${name}` : name;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="shortcut icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="manifest" href="/manifest.json" />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <meta name="generator" content={Astro.generator} />
        <meta name="title" content={pageTitle} />
        <meta name="description" content={description} />
        <title>{pageTitle}</title>
        <ClientRouter />
    </head>

    <body>
        <header class="header">
            <Navigation>
                {
                    !isHomepage(Astro.request.url) && backURL && backLabel && (
                        <a class="back" href={backURL}>
                            <Icon name="mdi:arrow-back" size="18" />{" "}
                            <span>{backLabel}</span>
                        </a>
                    )
                }
            </Navigation>
        </header>
        <main>
            <slot />
        </main>
        <Footer />
        <audio id="audio" src="/thilinag.mp3" preload="auto"></audio>
        <style lang="scss">
            .back {
                padding-left: 0;
                display: flex;
                align-items: center;
                gap: 0.5rem;
                text-decoration: none;
                font-size: 1rem;
            }

            .header {
                text-transform: uppercase;
                position: sticky;
                z-index: 2;
                top: 0;
                background: var(--bg);
            }
        </style>
        <script is:inline>
            window.addEventListener("deviceorientation", (evt) => {
                let rotateX, rotateY;
                if (evt.gamma < 0 && evt.beta < 0) {
                    rotateX = "-2deg";
                    rotateY = "2deg";
                }

                if (evt.gamma > 0 && evt.beta > 0) {
                    rotateX = "2deg";
                    rotateY = "-2deg";
                }

                if (evt.gamma > 0 && evt.beta < 0) {
                    rotateX = "-2deg";
                    rotateY = "-2deg";
                }

                if (evt.gamma < 0 && evt.beta > 0) {
                    rotateX = "2deg";
                    rotateY = "2deg";
                }

                if (Math.abs(evt.gamma) < 3 && Math.abs(evt.beta) < 3) {
                    rotateX = "0deg";
                    rotateY = "0deg";
                }

                document.documentElement.style.setProperty(
                    "--rotateX",
                    rotateX
                );
                document.documentElement.style.setProperty(
                    "--rotateY",
                    rotateY
                );
            });
        </script>
        <!--
 ________   _ ___             _____                       __                
/_  __/ /  (_) (_)__  ___ _  / ___/_ _____  ___ ____ ___ / /_____ ________ _
 / / / _ \/ / / / _ \/ _ `/ / (_ / // / _ \/ _ `(_-</ -_)  '_/ _ `/ __/ _ `/
/_/ /_//_/_/_/_/_//_/\_,_/  \___/\_,_/_//_/\_,_/___/\__/_/\_\\_,_/_/  \_,_/ 
-->
    </body>
</html>
