---
import type { CollectionEntry } from "astro:content";

import Layout from "./Layout.astro";
import Tags from "../components/Tags.astro";
import Tweets from "../components/Tweets.astro";
import type { MarkdownHeading } from "astro";
import TableOfContents from "../components/TableOfContents.astro";
import StructuredData from "../components/StructuredData.astro";
import Cover from "../components/Cover.astro";
import { getRelativeTime } from "../utils";

interface Props {
  data: CollectionEntry<"writing">["data"];
  headings: MarkdownHeading[];
}

const { data, headings } = Astro.props;
---

<Layout title={""} backLabel="All Writing" backURL="/writing/">
  <StructuredData data={data} />
  <article>
    <h1>{data.title}</h1>
    <small class="meta">
      {data.author.split(" ")[0]} wrote this
      <time datetime={data.pubDate.toISOString()}>
        {getRelativeTime(data.pubDate.getTime())}</time
      >.
    </small>
    {
      data.coverChars && (
        <Cover coverChars={data.coverChars} seed={data.title} />
      )
    }
    {data.toc && <TableOfContents headings={headings} />}
    {data.tweets?.length && <Tweets tweets={data.tweets} />}
    <slot />
    <footer>
      {data.tags?.length && <Tags tags={data.tags} />}
    </footer>
  </article>
</Layout>
<style>
  h1 {
    margin-bottom: 1rem;
  }

  .meta {
    display: block;
    margin-bottom: 2rem;
    color: var(--color-secondary);
  }
</style>
