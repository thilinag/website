---
import { type CollectionEntry } from "astro:content";
import { getRelativeTime } from "../utils";
import SvgMap from "./SvgMap.astro";
import { Image } from "astro:assets";
interface Props {
    post:
        | CollectionEntry<"projects">
        | CollectionEntry<"hiking">
        | CollectionEntry<"writing">;
    showDate?: boolean;
    lazyLoading?: boolean;
}

const { post, showDate = true, lazyLoading = true } = Astro.props;
const firstImagePath = post.data.hero;
---

<li class="post">
    <a class="postLink" href={`/${post.collection}/${post.id}`}>
        <article>
            <header class="postHeader">
                <h2>
                    {post.data.title}
                </h2>
                {
                    showDate && (
                        <time datetime={post.data.pubDate.toISOString()}>
                            {getRelativeTime(post.data.pubDate.getTime())}
                        </time>
                    )
                }
            </header>
            {post.data.description && <span>{post.data.description}</span>}
            <ul class="tags">
                {post.data.tags.map((tag) => <li>#{tag}</li>)}
            </ul>
        </article>
        {
            "geoJson" in post.data && post.data.geoJson && (
                <div class="map">
                    <SvgMap geoJson={post.data.geoJson} />
                </div>
            )
        }
        {
            firstImagePath && (
                <figure class="hero">
                    <Image
                        src={firstImagePath}
                        alt=""
                        loading={lazyLoading ? "lazy" : "eager"}
                    />
                </figure>
            )
        }
    </a>
    <style>
        .post {
            margin-bottom: 2rem;
            position: relative;
        }

        .postHeader {
            margin: 0 0 1rem;
        }

        .postLink {
            text-decoration: none;
            padding: 1rem;
            position: relative;
            z-index: 1;
            display: grid;
            grid-template-columns: 1fr;
            background-color: light-dark(#00000010, #ffffff05);
            border-radius: 1rem;
            gap: 2rem;
            transition: transform 0.3s ease;
            transform-style: preserve-3d;
            will-change: transform;
            border: 1px solid light-dark(#00000010, #ffffff05);
            transform: perspective(500px) rotateX(var(--rotateX))
                rotateY(var(--rotateY)) scaleZ(1) scale3d(1, 1, 1);
        }

        .postLink:hover {
            transform: perspective(500px) rotateX(2deg) rotateY(2deg)
                scale3d(1, 1, 1);
            border-color: light-dark(#00000010, #ffffff10);
            box-shadow: 0 1rem 3rem light-dark(#ffffff30, #00000030);
        }

        @media (min-width: 768px) {
            .postLink {
                grid-template-columns: 5fr 1fr;
            }
        }

        article {
            display: flex;
            flex-direction: column;
        }

        h2 {
            margin: 0;
            font-size: 1.5rem;
            line-height: 1.25;
            text-transform: uppercase;
        }

        time {
            display: block;
            font-size: 1rem;
            color: var(--color-secondary);
        }

        .tags {
            margin-top: auto;
            display: flex;
            flex-wrap: wrap;
            list-style: none;
            gap: 0.5rem 1rem;
            padding: 0;
            font-size: 1rem;
            color: var(--color-secondary);
        }

        .hero {
            margin: 0;
        }

        .hero img {
            height: 100%;
            border-radius: 0.5rem;
            display: block;
        }

        .map {
            max-height: 10rem;
        }
    </style>
</li>
