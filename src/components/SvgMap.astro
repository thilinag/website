---
import geojson2svg from "geojson-to-svg";

export interface Props {
  geoJson: object;
}

const { geoJson } = Astro.props;
const svgData = geojson2svg(
  geoJson,
  (a) => {
    return {
      weight: 0.002,
      color: a.properties.color || "#666",
    };
  },
  null,
  function (coord: number[]) {
    // flip vertically
    return [coord[0], -coord[1]];
  }
);
---

<div class='map' set:html={svgData.render()} />
<style>
  .map {
    width: 100%;
    height: 100%;
  }

  .map :global(svg) {
    display: block;
    height: 100%;
    width: 100%;
    object-fit: contain;
  }

  .map :global(path) {
    vector-effect: non-scaling-stroke;
    stroke-width: 3px;
  }

  .map :global(.mylocation) {
    fill: rgb(255 79 129);
    stroke-width: 0;
    /* vector-effect: non-scaling-stroke; */
  }

  .map :global(.mylocationRadar) {
    /* vector-effect: non-scaling-stroke; */
    animation: pulse 1.5s ease-in-out infinite;
    fill: rgba(255 79 129/ 0.5);
    transform-origin: 50% 50%;
    transform-box: fill-box;
    stroke-width: 0;
  }

  @keyframes pulse {
    0% {
      transform: scale(1, 1);
      opacity: 0;
    }

    50% {
      opacity: 1;
    }

    100% {
      transform: scale(3, 3);
      opacity: 0;
    }
  }
</style>
