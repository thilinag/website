---
import geojson2svg from "geojson-to-svg";
import { routeFillColor } from "../utils";

export interface Props {
  geoJson: object;
}

const { geoJson } = Astro.props;
const svgData = geojson2svg(
  geoJson,
  (a: any) => {
    return {
      weight: 0.002,
      color: a.properties.color || "#666",
    };
  },
  null,
  function (coord: number[]) {
    // flip vertically
    return [coord[0], -coord[1]];
  }
);
---

<div class="map" set:html={svgData.render()} />
<style define:vars={{ routeFillColor }}>
  .map {
    width: 100%;
    height: 100%;
    aspect-ratio: 1;
    justify-content: center;
    display: flex;
  }

  .map :global(svg) {
    display: block;
    max-height: 100%;
    max-width: 100%;
    object-fit: contain;
    /* aspect-ratio: 1; */
  }

  .map :global(path) {
    vector-effect: non-scaling-stroke;
    stroke-width: 3px;
    stroke: var(--color-secondary);
    opacity: 0.5;
  }

  .map :global(.mylocation) {
    vector-effect: non-scaling-stroke;
    stroke: var(--routeFillColor);
    fill: var(--routeFillColor);
    stroke-width: 4px;
  }

  .map :global(.mylocationRadar) {
    vector-effect: non-scaling-stroke;
    animation: pulse 1.5s infinite;
    stroke-width: 0;
    fill: rgba(255 79 129/ 0.5);
    stroke: rgba(255 79 129/ 0.5);
  }

  @keyframes pulse {
    0% {
      opacity: 0;
    }

    50% {
      opacity: 1;
    }

    100% {
      stroke-width: 20px;
      opacity: 0;
    }
  }
</style>
